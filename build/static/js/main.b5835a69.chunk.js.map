{"version":3,"sources":["components/utils/BodyPortal.jsx","components/utils/AlertBox.jsx","components/utils/Spinner.jsx","redux/user/userSelector.js","components/utils/ProtectedRoute.jsx","components/utils/PublicRoute.jsx","redux/user/userActionTypes.js","redux/user/userActions.js","pages/NotLoggedIn.jsx","components/layout/Navbar.jsx","components/layout/Pipes.jsx","pages/Dashboard.jsx","pages/Home.jsx","components/layout/FgiName.jsx","components/layout/FgiEmail.jsx","components/layout/FgiPass.jsx","components/layout/SubmitBtn.jsx","components/layout/ImageCrop.jsx","redux/alert/alertActionTypes.js","redux/alert/alertActions.js","pages/Edit.jsx","components/layout/WaveSvg.jsx","components/utils/BackLink.jsx","pages/LoginSignup.jsx","pages/ForgetPassword.jsx","firebase/firebaseConfig.js","firebase/firebaseUtils.js","pages/AccountManagement.jsx","pages/PageNotFound.jsx","App.jsx","redux/alert/alertReducer.js","redux/user/userReducer.js","redux/rootReducer.js","redux/alert/alertSagas.js","components/vanilla/hold.js","redux/user/userSagas.js","redux/rootSaga.js","redux/store.js","components/vanilla/preloader.js","index.js"],"names":["BodyPortal","props","ReactDOM","createPortal","children","document","body","connect","state","alert","useState","showAlert","setShowAlert","nodeRef","useRef","useEffect","node","current","classList","remove","add","setTimeout","ref","className","type","style","display","msg","Spinner","color","selectUser","user","selectCurrentUser","createSelector","currentUser","selectUserStatus","status","selectDefaultPhotoURL","defaultPhotoURL","mapStateToProps","createStructuredSelector","rest","render","location","to","pathname","from","userActionTypes","STORE_USER","SET_STATUS","CHECK_USER_LOGGED_IN","SIGN_IN","SIGN_OUT","SIGN_UP","FORGET_PASSWORD","CONFIRM_PASSWORD_RESET","UPDATE_PASSWORD","UPDATE_EMAIL","UPDATE_PROFILE","storeUser","payload","uid","email","displayName","photoURL","setStatus","message","NotLoggedIn","dispatch","signOut","page","history","useHistory","home","id","onClick","push","xmlns","aria-hidden","focusable","role","width","height","preserveAspectRatio","viewBox","transform","fill","d","edit","logout","stroke","strokeWidth","strokeLinecap","strokeLinejoin","Pipes","viewProfilePhoto","setViewProfilePhoto","src","alt","FgiName","path","fullname","updateFullname","fullnameStatus","updateFullnameStatus","shouldHover","setShouldHover","shouldFocus","setShouldFocus","length","groupClass","classNames","groupStyle","border","labelClass","labelStyle","onMouseEnter","onMouseLeave","value","onChange","e","target","onFocus","onBlur","htmlFor","FgiEmail","updateEmail","emailStatus","updateEmailStatus","validator","validate","FgiPass","label","password","updatePassword","passwordStatus","updatePasswordStatus","showEyeSvg","setShowEyeSvg","showPassword","setShowPassword","eyeSvg","togglePassword","eyeSvgClass","showeyesvg","eyeSvgStyle","SubmitBtn","content","name","ImageCrop","cropText","img","openModal","updateModal","onCropped","spinner","setSpinner","openCropper","setOpenCropper","cropper","setCropper","cropStatus","setCropStatus","ic","closeCropper","destroy","Cropper","aspectRatio","viewMode","dragMode","guides","highlight","center","autoCropArea","movable","rotatable","scalable","zoomable","fillColor","imageSmoothingEnabled","imageSmoothingQuality","base64","getCroppedCanvas","maxWidth","maxHeight","toDataURL","toBlob","blob","photo","fileName","lastModifiedDate","Date","File","lastModified","blobToFile","alertActionTypes","ALERT","SHOW_ALERT","HIDE_ALERT","time","userStatus","currentPassword","newPassword","updateProfile","obj","setFullname","setFullnameStatus","setPhotoURL","openImageCropModal","setOpenImageCropModal","newPhotoDataUrl","setNewPhotoDataUrl","newPhotoFile","setNewPhotoFile","setEmail","setEmailStatus","setPassword","setPasswordStatus","setCurrentPassword","currentPasswordStatus","setCurrentPasswordStatus","setNewPassword","newPasswordStatus","setNewPasswordStatus","submittedBtn","setSubmittedBtn","updateProfileBtnStatus","setUpdateProfileBtnStatus","updateEmailBtnStatus","setUpdateEmailBtnStatus","updatePasswordBtnStatus","setUpdatePasswordBtnStatus","Btns","profile","uploadImageInput","autoComplete","onSubmit","preventDefault","cropImageUrl","accept","files","reader","FileReader","readAsDataURL","onload","result","WaveSvg","BackLink","route","tabIndex","register","fullName","signUp","login","signIn","title","forgetPassword","footer","submitBtn","useLocation","submitBtnStatus","setSubmitBtnStatus","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebase","initializeApp","fb","auth","storageRef","storage","getCurrentUser","confirmPasswordReset","actionCode","query","URLSearchParams","search","get","isInvalidCode","setIsInvalidCode","showForm","setShowForm","accountEmail","setAccountEmail","a","verifyPasswordResetCode","console","log","PageNotFound","checkUserLoggedIn","fallback","exact","component","Home","ProtectedRoute","LoginSignup","INITIAL_STATE","alertReducer","action","userReducer","rootReducer","combineReducers","onAlert","alertSagas","hold","Promise","res","put","takeLatest","all","call","ms","isUserLoggedIn","onCheckUserLoggedIn","signup","onSignup","signin","onSignin","signout","onSignout","onForgetPassword","_reAuthenticateUser","onUpdatePassword","onUpdateEmail","onConfirmPasswordReset","onUpdateProfile","userSagas","resolve","reject","unsubscribe","onAuthStateChanged","createUserWithEmailAndPassword","Error","code","signInWithEmailAndPassword","sendPasswordResetEmail","credentials","EmailAuthProvider","credential","reauthenticateWithCredential","newPhoto","ext","split","pop","child","contentType","snapshot","getDownloadURL","rootSaga","sagaMiddleware","createSagaMiddleware","middlewares","store","createStore","applyMiddleware","run","loader","getElementById","window","addEventListener","preloader","StrictMode"],"mappings":"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","file":"static/js/main.b5835a69.chunk.js","sourcesContent":["import ReactDOM from 'react-dom';\n\nconst BodyPortal = (props) => ReactDOM.createPortal(props.children, document.body);\n\nexport default BodyPortal;\n","import React, { useRef, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport BodyPortal from './BodyPortal';\n\nconst AlertBox = ({ alert }) => {\n   const [showAlert, setShowAlert] = useState(alert.showAlert);\n   const nodeRef = useRef(null);\n\n   useEffect(() => {\n      const node = nodeRef.current;\n      if (alert.showAlert) {\n         setShowAlert(true);\n         node.classList.remove('slideOutUp');\n         node.classList.add('slideInDown');\n      } else {\n         setTimeout(() => {\n            setShowAlert(false);\n         }, 400);\n         node.classList.remove('slideInDown');\n         node.classList.add('slideOutUp');\n      }\n   }, [alert]);\n\n   return (\n      <BodyPortal>\n         {/* <Animate\n            nodeRef={nodeRef}\n            start={() => ({\n               y: -150,\n            })}\n            update={() => ({\n               y: [alert.showAlert ? 0 : -150],\n               timing: { duration: 400, ease: easeExpOut },\n            })}\n         >\n            {({ y }) => {\n               return (\n                  <div\n                     ref={nodeRef}\n                     className={`alert alert--${alert.type}`}\n                     style={{ transform: `translate3d(-50%, ${y}%, 0)` }}\n                  >\n                     {alert.msg}\n                  </div>\n               );\n            }}\n         </Animate> */}\n         <div\n            ref={nodeRef}\n            className={`alert alert--${alert.type}`}\n            style={{ display: showAlert ? 'block' : 'none' }}\n         >\n            {alert.msg}\n         </div>\n      </BodyPortal>\n   );\n};\n\nconst mapStateToProps = (state) => ({\n   alert: state.alert,\n});\nexport default connect(mapStateToProps)(AlertBox);\n","import React from 'react';\r\n\r\nconst Spinner = ({ color }) => (\r\n   <div className={`spinner spinner-${color ?? 'white'}`}></div>\r\n);\r\n\r\nexport default Spinner;\r\n","import { createSelector } from 'reselect';\n\nconst selectUser = (state) => state.user;\n\nexport const selectCurrentUser = createSelector([selectUser], (user) => user.currentUser);\n\nexport const selectUserStatus = createSelector([selectUser], (user) => user.status);\n\nexport const selectDefaultPhotoURL = createSelector(\n   [selectUser],\n   (user) => user.defaultPhotoURL,\n);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\n\nimport { selectCurrentUser } from '../../redux/user/userSelector';\nimport Spinner from '../utils/Spinner';\n\nconst PrivateRoute = ({ currentUser, children, ...rest }) => {\n   return (\n      <Route\n         {...rest}\n         render={({ location }) => {\n            if (currentUser === 'checking') {\n               return <Spinner />;\n            } else if (currentUser) {\n               return children;\n            } else {\n               return (\n                  <Redirect\n                     to={{\n                        pathname: '/',\n                        state: { from: location },\n                     }}\n                  />\n               );\n            }\n         }}\n      />\n   );\n};\n\nconst mapStateToProps = createStructuredSelector({\n   currentUser: selectCurrentUser,\n});\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { selectCurrentUser } from '../../redux/user/userSelector';\r\nimport Spinner from '../utils/Spinner';\r\n\r\nconst PublicRoute = ({ currentUser, children, ...rest }) => {\r\n   return (\r\n      <Route\r\n         {...rest}\r\n         render={({ location }) => {\r\n            if (currentUser === 'checking') {\r\n               return <Spinner />;\r\n            } else if (currentUser) {\r\n               return (\r\n                  <Redirect\r\n                     to={{\r\n                        pathname: '/',\r\n                        state: { from: location },\r\n                     }}\r\n                  />\r\n               );\r\n            } else {\r\n               return children;\r\n            }\r\n         }}\r\n      />\r\n   );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n   currentUser: selectCurrentUser,\r\n});\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","const userActionTypes = {\n   STORE_USER: 'STORE_USER',\n   SET_STATUS: 'SET_STATUS',\n\n   CHECK_USER_LOGGED_IN: 'CHECK_USER_LOGGED_IN',\n\n   SIGN_IN: 'SIGN_IN',\n   SIGN_OUT: 'SIGN_OUT',\n   SIGN_UP: 'SIGN_UP',\n\n   FORGET_PASSWORD: 'FORGET_PASSWORD',\n   CONFIRM_PASSWORD_RESET: 'CONFIRM_PASSWORD_RESET,',\n\n   UPDATE_PASSWORD: 'UPDATE_PASSWORD',\n   UPDATE_EMAIL: 'UPDATE_EMAIL',\n   UPDATE_PROFILE: 'UPDATE_PROFILE',\n};\n\nexport default userActionTypes;\n","import userActionTypes from './userActionTypes';\n\nexport const storeUser = (user) => ({\n   type: userActionTypes.STORE_USER,\n   payload: user\n      ? {\n           uid: user.uid,\n           email: user.email,\n           displayName: user.displayName,\n           photoURL: user.photoURL,\n        }\n      : null,\n});\n\nexport const setStatus = (type, message) => ({\n   type: userActionTypes.SET_STATUS,\n   payload: { type, message },\n});\n\nexport const checkUserLoggedIn = () => ({\n   type: userActionTypes.CHECK_USER_LOGGED_IN,\n});\n\nexport const signUp = ({ email, password, fullName }) => ({\n   type: userActionTypes.SIGN_UP,\n   payload: { email, password, fullName },\n});\n\nexport const signIn = ({ email, password }) => ({\n   type: userActionTypes.SIGN_IN,\n   payload: { email, password },\n});\n\nexport const signOut = () => ({\n   type: userActionTypes.SIGN_OUT,\n});\n\nexport const forgetPassword = (email) => ({\n   type: userActionTypes.FORGET_PASSWORD,\n   payload: { email },\n});\n\nexport const updatePassword = ({ currentPassword, newPassword }) => ({\n   type: userActionTypes.UPDATE_PASSWORD,\n   payload: { currentPassword, newPassword },\n});\n\nexport const updateEmail = ({ email, password }) => ({\n   type: userActionTypes.UPDATE_EMAIL,\n   payload: { email, password },\n});\n\nexport const confirmPasswordReset = ({ actionCode, newPassword }) => ({\n   type: userActionTypes.CONFIRM_PASSWORD_RESET,\n   payload: { actionCode, newPassword },\n});\n\nexport const updateProfile = (obj) => ({\n   type: userActionTypes.UPDATE_PROFILE,\n   payload: obj,\n});\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NotLoggedIn = () => (\r\n   <div className=\"nli\">\r\n      <div className=\"nli__heading\">Welcome!</div>\r\n      <div className=\"nli__desc\">\r\n         This is just a simple Login and Sign Up module. Login to your account or Sign Up\r\n         if you haven&#39;t created one.\r\n      </div>\r\n      <div className=\"nli__links\">\r\n         <Link to=\"/login\" className=\"nli__links--link\">\r\n            Login\r\n         </Link>\r\n         <Link to=\"/signup\" className=\"nli__links--link\">\r\n            Sign Up\r\n         </Link>\r\n      </div>\r\n   </div>\r\n);\r\n\r\nexport default NotLoggedIn;\r\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { signOut } from '../../redux/user/userActions';\n\nconst Navbar = ({ page, signOut }) => {\n   const history = useHistory();\n\n   const home = (\n      <div className=\"navbar__link\" id=\"home\" onClick={() => history.push('/')}>\n         <div className=\"navbar__link--svgbox\">\n            <svg\n               className=\"navbar__link--svg\"\n               xmlns=\"http://www.w3.org/2000/svg\"\n               aria-hidden=\"true\"\n               focusable=\"false\"\n               role=\"img\"\n               width=\"1em\"\n               height=\"1em\"\n               preserveAspectRatio=\"xMidYMid meet\"\n               viewBox=\"0 -27 512 512\"\n               style={{ transform: 'rotate(360deg)' }}\n            >\n               <path\n                  fill=\"#002fff\"\n                  d=\"M401.4 224h-214l83-79.4c11.9-12.5 11.9-32.7 0-45.2s-31.2-12.5-43.2 0L89 233.4c-6 5.8-9 13.7-9 22.4v.4c0 8.7 3 16.6 9 22.4l138.1 134c12 12.5 31.3 12.5 43.2 0 11.9-12.5 11.9-32.7 0-45.2l-83-79.4h214c16.9 0 30.6-14.3 30.6-32 .1-18-13.6-32-30.5-32z\"\n               ></path>\n            </svg>\n         </div>\n         <div className=\"navbar__link--text\">Home</div>\n      </div>\n   );\n\n   const edit = (\n      <div className=\"navbar__link\" id=\"edit\" onClick={() => history.push('/edit')}>\n         <div className=\"navbar__link--svgbox\">\n            <svg\n               className=\"navbar__link--svg\"\n               xmlns=\"http://www.w3.org/2000/svg\"\n               aria-hidden=\"true\"\n               focusable=\"false\"\n               role=\"img\"\n               preserveAspectRatio=\"xMidYMid meet\"\n               viewBox=\"0 -1 24 24\"\n               style={{ transform: 'rotate(360deg)' }}\n            >\n               <path\n                  fill=\"#002fff\"\n                  d=\"M8.999 3.999a4.002 4.002 0 0 0 0 8.003a3.999 3.999 0 0 0 3.998-4.005A3.998 3.998 0 0 0 9 4zm0 10C6.329 13.999 1 15.332 1 17.997V20H12.08a6.233 6.233 0 0 1-.078-1.001c0-1.514.493-2.988 1.407-4.199c-1.529-.523-3.228-.801-4.41-.801zm8.99 0a.261.261 0 0 0-.25.21l-.19 1.319a4.091 4.091 0 0 0-.85.492l-1.24-.502a.265.265 0 0 0-.308.112l-1.001 1.729a.255.255 0 0 0 .059.322l1.06.83a3.95 3.95 0 0 0 0 .981l-1.06.83a.26.26 0 0 0-.059.318l1.001 1.729c.059.111.19.151.308.111l1.24-.497c.258.2.542.366.85.488l.19 1.318c.02.122.122.21.25.21h2.001c.122 0 .23-.088.25-.21l.19-1.318c.297-.132.59-.288.84-.488l1.25.497c.111.04.239 0 .313-.111l.996-1.729a.256.256 0 0 0-.059-.317l-1.07-.83c.02-.162.04-.323.04-.494c0-.171-.01-.328-.04-.488l1.06-.83c.087-.084.121-.21.059-.322l-.996-1.729a.263.263 0 0 0-.313-.113l-1.24.503c-.26-.2-.543-.37-.85-.492l-.19-1.32a.238.238 0 0 0-.24-.21M18.989 17.5c.83 0 1.5.669 1.5 1.499c0 .83-.67 1.498-1.5 1.498S17.49 19.83 17.49 19s.669-1.499 1.499-1.499z\"\n               ></path>\n            </svg>\n         </div>\n         <div className=\"navbar__link--text\">Edit</div>\n      </div>\n   );\n\n   const logout = (\n      <div className=\"navbar__link\" id=\"logout\" onClick={signOut}>\n         <div className=\"navbar__link--text\">Logout</div>\n         <div className=\"navbar__link--svgbox\">\n            <svg\n               className=\"navbar__link--svg\"\n               xmlns=\"http://www.w3.org/2000/svg\"\n               aria-hidden=\"true\"\n               focusable=\"false\"\n               role=\"img\"\n               width=\"1em\"\n               height=\"1em\"\n               preserveAspectRatio=\"xMidYMid meet\"\n               viewBox=\"0 -1 24 24\"\n               style={{ transform: 'rotate(360deg)' }}\n            >\n               <g fill=\"none\">\n                  <path\n                     d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 0 1-3 3H6a3 3 0 0 1-3-3V7a3 3 0 0 1 3-3h4a3 3 0 0 1 3 3v1\"\n                     stroke=\"#002fff\"\n                     strokeWidth=\"2\"\n                     strokeLinecap=\"round\"\n                     strokeLinejoin=\"round\"\n                  ></path>\n               </g>\n            </svg>\n         </div>\n      </div>\n   );\n\n   return (\n      <nav className=\"navbar\">\n         {page === 'home' ? edit : home}\n         {logout}\n      </nav>\n   );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n   signOut: () => dispatch(signOut()),\n});\nexport default connect(null, mapDispatchToProps)(Navbar);\n","import React from 'react';\n\nconst Pipes = () => (\n   <div className=\"pipes\">\n      <div className=\"pipes__pipe pipes__pipe--left\"></div>\n      <div className=\"pipes__pipe pipes__pipe--right\"></div>\n   </div>\n);\n\nexport default Pipes;\n","import React, { useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport Navbar from '../components/layout/Navbar';\nimport Pipes from '../components/layout/Pipes';\nimport BodyPortal from '../components/utils/BodyPortal';\nimport { selectCurrentUser } from '../redux/user/userSelector';\n\nconst Dashboard = ({ user }) => {\n   const [viewProfilePhoto, setViewProfilePhoto] = useState(false);\n   const nodeRef = useRef(null);\n\n   const openPhoto = () => {\n      setViewProfilePhoto(true);\n      const node = nodeRef.current;\n      node.classList.remove('profile-zoom-out');\n      node.classList.remove('home__profile--photo');\n      node.classList.add('home__profile--view-photo');\n      node.classList.add('profile-zoom-in');\n   };\n   const closePhoto = () => {\n      setViewProfilePhoto(false);\n      const node = nodeRef.current;\n      node.classList.remove('profile-zoom-in');\n      node.classList.add('profile-zoom-out');\n      setTimeout(() => {\n         node.classList.add('home__profile--photo');\n      }, 200);\n   };\n\n   return (\n      <>\n         <BodyPortal>\n            <div\n               className=\"home__profile--backdrop\"\n               style={{ display: viewProfilePhoto ? 'block' : 'none' }}\n               onClick={closePhoto}\n            ></div>\n         </BodyPortal>\n         <Navbar page=\"home\" />\n         <Pipes />\n         <div className=\"section\">\n            <h1 className=\"home__title\">Welcome!</h1>\n            <div className=\"home__profile\" onClick={openPhoto}>\n               <img\n                  className=\"home__profile--photo\"\n                  ref={nodeRef}\n                  src={user.photoURL}\n                  alt=\"profile\"\n               />\n            </div>\n         </div>\n         <Pipes />\n         <div className=\"section\">\n            <div className=\"home__details\">\n               <div className=\"home__details__row\">\n                  <div className=\"home__details__heading\">Your Details:</div>\n               </div>\n               <div className=\"home__details__row\">\n                  <div className=\"home__details--key\">Name</div>\n                  <div className=\"home__details--value\">{user.displayName}</div>\n               </div>\n               <div className=\"home__details__row\">\n                  <div className=\"home__details--key\">Email</div>\n                  <div className=\"home__details--value\">{user.email}</div>\n               </div>\n            </div>\n         </div>\n      </>\n   );\n};\n\nconst mapStateToProps = createStructuredSelector({\n   user: selectCurrentUser,\n});\nexport default connect(mapStateToProps)(Dashboard);\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { selectCurrentUser } from '../redux/user/userSelector';\r\n\r\nimport Spinner from '../components/utils/Spinner';\r\n\r\nimport NotLoggedIn from './NotLoggedIn';\r\nimport Dashboard from './Dashboard';\r\n\r\nconst Home = ({ currentUser }) => {\r\n   if (currentUser === 'checking') {\r\n      return <Spinner />;\r\n   } else if (currentUser) {\r\n      return <Dashboard />;\r\n   } else {\r\n      return <NotLoggedIn />;\r\n   }\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n   currentUser: selectCurrentUser,\r\n});\r\nexport default connect(mapStateToProps)(Home);\r\n","import React, { useState, useEffect } from 'react';\nimport classNames from 'classnames';\n\nconst FgiName = ({\n   path,\n   fullname,\n   updateFullname,\n   fullnameStatus,\n   updateFullnameStatus,\n}) => {\n   path = path ?? 'no-path';\n   const [shouldHover, setShouldHover] = useState(false);\n   const [shouldFocus, setShouldFocus] = useState(false);\n\n   useEffect(() => {\n      if (fullname.length === 0) {\n         updateFullnameStatus('notEntered');\n      } else {\n         updateFullnameStatus('EnteredAndValid');\n      }\n   }, [fullname, updateFullnameStatus]);\n\n   const mouseEnter = () => {\n      if (fullname.length === 0 && !shouldFocus) {\n         setShouldHover(true);\n      }\n   };\n   const mouseLeave = () => {\n      setShouldHover(false);\n   };\n   const focusIn = () => {\n      setShouldFocus(true);\n      setShouldHover(false);\n   };\n   const focusOut = () => {\n      setShouldFocus(false);\n   };\n\n   const groupClass = classNames('form__group', {\n      'hover-input': shouldHover,\n      'focus-input': shouldFocus,\n   });\n   const groupStyle = {\n      display: path === '/login' ? 'none' : 'block',\n      border: fullnameStatus === 'EnteredAndValid' ? '1px solid #002fff' : null,\n   };\n   const labelClass = classNames('form__group-label', {\n      'hover-label': shouldHover,\n      'focus-label': shouldFocus,\n   });\n   const labelStyle = {\n      color: fullnameStatus === 'EnteredAndValid' ? '#002fff' : null,\n   };\n\n   return (\n      <div\n         className={groupClass}\n         style={groupStyle}\n         onMouseEnter={mouseEnter}\n         onMouseLeave={mouseLeave}\n      >\n         <input\n            className=\"form__group-input\"\n            id=\"nameInput\"\n            type=\"text\"\n            value={fullname}\n            onChange={(e) => updateFullname(e.target.value)}\n            onFocus={focusIn}\n            onBlur={focusOut}\n         />\n         <label\n            id=\"nameLabel\"\n            htmlFor=\"nameInput\"\n            className={labelClass}\n            style={labelStyle}\n         >\n            Full Name\n         </label>\n      </div>\n   );\n};\n\nexport default FgiName;\n","import React, { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport validator from 'email-validator';\n\nconst FgiEmail = ({ email, updateEmail, emailStatus, updateEmailStatus }) => {\n   const [shouldHover, setShouldHover] = useState(false);\n   const [shouldFocus, setShouldFocus] = useState(false);\n\n   useEffect(() => {\n      if (email.length === 0) {\n         updateEmailStatus('notEntered');\n      } else if (validator.validate(email)) {\n         updateEmailStatus('EnteredAndValid');\n      } else {\n         updateEmailStatus('EnteredButInvalid');\n      }\n   }, [email, updateEmailStatus]);\n\n   const mouseEnter = () => {\n      if (email.length === 0 && !shouldFocus) {\n         setShouldHover(true);\n      }\n   };\n   const mouseLeave = () => {\n      setShouldHover(false);\n   };\n   const focusIn = () => {\n      setShouldFocus(true);\n      setShouldHover(false);\n   };\n   const focusOut = () => {\n      setShouldFocus(false);\n   };\n\n   const groupClass = classNames('form__group', {\n      'hover-input': shouldHover,\n      'focus-input': shouldFocus,\n   });\n   const groupStyle = () => {\n      if (emailStatus === 'EnteredAndValid') {\n         return { border: '1px solid #002fff' };\n      } else if (emailStatus === 'EnteredButInvalid') {\n         return { border: '1px solid tomato' };\n      } else {\n         return null;\n      }\n   };\n   const labelClass = classNames('form__group-label', {\n      'hover-label': shouldHover,\n      'focus-label': shouldFocus,\n   });\n   const labelStyle = () => {\n      if (emailStatus === 'EnteredAndValid') {\n         return { color: '#002fff' };\n      } else if (emailStatus === 'EnteredButInvalid') {\n         return { color: 'tomato' };\n      } else {\n         return null;\n      }\n   };\n\n   return (\n      <div\n         className={groupClass}\n         style={groupStyle()}\n         onMouseEnter={mouseEnter}\n         onMouseLeave={mouseLeave}\n      >\n         <input\n            className=\"form__group-input\"\n            id=\"emailInput\"\n            type=\"email\"\n            value={email}\n            onChange={(e) => updateEmail(e.target.value)}\n            onFocus={focusIn}\n            onBlur={focusOut}\n         />\n         <label\n            id=\"emailLabel\"\n            htmlFor=\"emailInput\"\n            className={labelClass}\n            style={labelStyle()}\n         >\n            Email\n         </label>\n      </div>\n   );\n};\n\nexport default FgiEmail;\n","import React, { useState, useEffect } from 'react';\nimport classNames from 'classnames';\n\nconst FgiPass = ({\n   label,\n   password,\n   updatePassword,\n   passwordStatus,\n   updatePasswordStatus,\n}) => {\n   label = label ?? 'password';\n   const [shouldHover, setShouldHover] = useState(false);\n   const [shouldFocus, setShouldFocus] = useState(false);\n   const [showEyeSvg, setShowEyeSvg] = useState(false);\n   const [showPassword, setShowPassword] = useState(false);\n\n   useEffect(() => {\n      if (password.length === 0) {\n         updatePasswordStatus('notEntered');\n      } else if (password.length > 7) {\n         updatePasswordStatus('EnteredAndValid');\n      } else {\n         updatePasswordStatus('EnteredButInvalid');\n      }\n   }, [password, updatePasswordStatus]);\n\n   const togglePassword = () => {\n      setShowPassword(!showPassword);\n   };\n   const labelName = () => {\n      if (label === 'currentPassword') {\n         return 'Current Password';\n      }\n      if (label === 'newPassword') {\n         return 'New Password';\n      }\n      return 'Password';\n   };\n   const mouseEnter = () => {\n      if (password.length === 0 && !shouldFocus) {\n         setShouldHover(true);\n      }\n      setShowEyeSvg(true);\n   };\n   const mouseLeave = () => {\n      setShouldHover(false);\n      setShowEyeSvg(false);\n   };\n   const focusIn = () => {\n      setShouldFocus(true);\n      setShouldHover(false);\n   };\n   const focusOut = () => {\n      setShouldFocus(false);\n   };\n\n   const groupClass = classNames('form__group', {\n      'hover-input': shouldHover,\n      'focus-input': shouldFocus,\n   });\n   const groupStyle = () => {\n      if (passwordStatus === 'EnteredAndValid') {\n         return { border: '1px solid #002fff' };\n      }\n      if (passwordStatus === 'EnteredButInvalid') {\n         return { border: '1px solid tomato' };\n      }\n      return null;\n   };\n   const labelClass = classNames('form__group-label', {\n      'hover-label': shouldHover,\n      'focus-label': shouldFocus,\n   });\n   const labelStyle = () => {\n      if (passwordStatus === 'EnteredAndValid') {\n         return { color: '#002fff' };\n      } else if (passwordStatus === 'EnteredButInvalid') {\n         return { color: 'tomato' };\n      } else {\n         return null;\n      }\n   };\n   const eyeSvgClass = classNames('eye-svg', {\n      showeyesvg: showEyeSvg,\n   });\n   const eyeSvgStyle = {\n      display: showPassword ? 'inline-block' : null,\n   };\n\n   let eyeSvg;\n   if (showPassword) {\n      eyeSvg = (\n         <svg\n            focusable=\"false\"\n            viewBox=\"0 0 24 24\"\n            onClick={togglePassword}\n            className={eyeSvgClass}\n            style={eyeSvgStyle}\n         >\n            <path\n               d=\"M8.073 12.194L4.212 8.333c-1.52 1.657-2.096 3.317-2.106 3.351L2 12l.105.316C2.127 12.383 4.421 19 12.054 19c.929 0 1.775-.102 2.552-.273l-2.746-2.746a3.987 3.987 0 0 1-3.787-3.787zM12.054 5c-1.855 0-3.375.404-4.642.998L3.707 2.293L2.293 3.707l18 18l1.414-1.414l-3.298-3.298c2.638-1.953 3.579-4.637 3.593-4.679l.105-.316l-.105-.316C21.98 11.617 19.687 5 12.054 5zm1.906 7.546c.187-.677.028-1.439-.492-1.96s-1.283-.679-1.96-.492L10 8.586A3.955 3.955 0 0 1 12.054 8c2.206 0 4 1.794 4 4a3.94 3.94 0 0 1-.587 2.053l-1.507-1.507z\"\n               fill=\"#002fff\"\n            ></path>\n         </svg>\n      );\n   } else {\n      eyeSvg = (\n         <svg\n            focusable=\"false\"\n            viewBox=\"0 0 24 24\"\n            onClick={togglePassword}\n            className={eyeSvgClass}\n            style={eyeSvgStyle}\n         >\n            <path\n               d=\"M12 5c-7.633 0-9.927 6.617-9.948 6.684L1.946 12l.105.316C2.073 12.383 4.367 19 12 19s9.927-6.617 9.948-6.684l.106-.316l-.105-.316C21.927 11.617 19.633 5 12 5zm0 11c-2.206 0-4-1.794-4-4s1.794-4 4-4s4 1.794 4 4s-1.794 4-4 4z\"\n               fill=\"#002fff\"\n            ></path>\n            <path\n               d=\"M12 10c-1.084 0-2 .916-2 2s.916 2 2 2s2-.916 2-2s-.916-2-2-2z\"\n               fill=\"#002fff\"\n            ></path>\n         </svg>\n      );\n   }\n\n   return (\n      <div\n         className={groupClass}\n         style={groupStyle()}\n         onMouseEnter={mouseEnter}\n         onMouseLeave={mouseLeave}\n      >\n         <input\n            className=\"form__group-input form__group-input--pass\"\n            id={`${label}Input`}\n            type={showPassword ? 'text' : 'password'}\n            value={password}\n            onChange={(e) => updatePassword(e.target.value)}\n            onFocus={focusIn}\n            onBlur={focusOut}\n         />\n         <label\n            id={`${label}Label`}\n            htmlFor={`${label}Input`}\n            className={labelClass}\n            style={labelStyle()}\n         >\n            {labelName()}\n         </label>\n         {eyeSvg}\n      </div>\n   );\n};\n\nexport default FgiPass;\n","import React from 'react';\r\n\r\nconst SubmitBtn = ({ status, name }) => {\r\n   let content;\r\n   if (status === 'notSubmitted') {\r\n      content = <span>{name}</span>;\r\n   } else if (status === 'submitted') {\r\n      content = <span className=\"spinner-white\" />;\r\n   } else if (status === 'success') {\r\n      content = <span>&#10003;</span>;\r\n   } else if (status === 'error') {\r\n      content = <span>&#10007;</span>;\r\n   } else {\r\n      content = <span>button</span>;\r\n   }\r\n   return <button className=\"btn\">{content}</button>;\r\n};\r\n\r\nexport default SubmitBtn;\r\n","import React, { useEffect, useRef, useState } from 'react';\nimport Cropper from 'cropperjs';\n\nimport Spinner from '../utils/Spinner';\n\nconst ImageCrop = ({ img, openModal, updateModal, onCropped }) => {\n   const [spinner, setSpinner] = useState(false);\n   const [openCropper, setOpenCropper] = useState(false);\n   const [cropper, setCropper] = useState(null);\n   const [cropStatus, setCropStatus] = useState('notCropped');\n   const ic = useRef(null);\n\n   const createNewCropperInstance = () => {\n      setCropper(\n         new Cropper(ic.current, {\n            aspectRatio: 1 / 1,\n            viewMode: 2,\n            dragMode: 'move',\n            guides: false,\n            highlight: false,\n            center: true,\n            autoCropArea: 1,\n            movable: false,\n            rotatable: false,\n            scalable: false,\n            zoomable: false,\n            fillColor: '#000000',\n            imageSmoothingEnabled: true,\n            imageSmoothingQuality: 'high',\n         }),\n      );\n   };\n\n   const closeCropper = () => {\n      setOpenCropper(false);\n      updateModal(false);\n      setTimeout(() => {\n         cropper.destroy();\n      }, 500);\n   };\n\n   const blobToFile = (blob, fileName) => {\n      const lastModifiedDate = new Date();\n      const file = new File([blob], fileName, { lastModified: lastModifiedDate });\n      return file;\n   };\n\n   const cropImage = () => {\n      setCropStatus('cropping');\n      const base64 = cropper\n         .getCroppedCanvas({ maxWidth: 1000, maxHeight: 1000 })\n         .toDataURL();\n      cropper.getCroppedCanvas({ maxWidth: 1000, maxHeight: 1000 }).toBlob(\n         (blob) => {\n            const photo = blobToFile(blob, 'testing.jpeg');\n            onCropped({ base64, photo });\n            setTimeout(() => {\n               setCropStatus('cropped');\n               setTimeout(() => {\n                  closeCropper();\n               }, 200);\n            }, 500);\n         },\n         'image/jpeg',\n         1,\n      );\n   };\n\n   useEffect(() => {\n      if (openModal === true) {\n         setSpinner(true);\n         setTimeout(() => {\n            setSpinner(false);\n            setOpenCropper(true);\n            setCropStatus('notCropped');\n            createNewCropperInstance();\n         }, 800);\n      }\n   }, [openModal]);\n\n   let cropText;\n   if (cropStatus === 'notCropped') {\n      cropText = <span>crop</span>;\n   } else if (cropStatus === 'cropping') {\n      cropText = <span>cropping</span>;\n   } else if (cropStatus === 'cropped') {\n      cropText = <span>&#10003;</span>;\n   }\n\n   return (\n      <>\n         {spinner && <Spinner color=\"blue\" />}\n         <div\n            className=\"ic__container\"\n            style={{ display: openCropper ? 'block' : 'none' }}\n         >\n            <div className=\"ic__header\">\n               <div className=\"ic__header--title\">Image Cropper</div>\n               <span className=\"ic__header--cancel-btn\" onClick={closeCropper}>\n                  ×\n               </span>\n            </div>\n            <div className=\"ic__body\">\n               <div className=\"ic__body--canvas\">\n                  <img\n                     className=\"ic__body--canvas--img\"\n                     ref={ic}\n                     src={img}\n                     alt=\"profile\"\n                  />\n               </div>\n            </div>\n            <div className=\"ic__footer\" onClick={cropImage}>\n               {cropText}\n            </div>\n         </div>\n      </>\n   );\n};\n\nexport default ImageCrop;\n","const alertActionTypes = {\n   ALERT: 'ALERT',\n   SHOW_ALERT: 'SHOW_ALERT',\n   HIDE_ALERT: 'HIDE_ALERT',\n};\n\nexport default alertActionTypes;\n","import alertActionTypes from './alertActionTypes';\n\nexport const alert = (type, msg, time) => ({\n   type: alertActionTypes.ALERT,\n   payload: { type, msg, time },\n});\n\nexport const showAlert = (type, msg) => ({\n   type: alertActionTypes.SHOW_ALERT,\n   payload: { type, msg },\n});\n\nexport const hideAlert = () => ({\n   type: alertActionTypes.HIDE_ALERT,\n});\n","import React, { useEffect, useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport Navbar from '../components/layout/Navbar';\nimport Pipes from '../components/layout/Pipes';\nimport FgiName from '../components/layout/FgiName';\nimport FgiEmail from '../components/layout/FgiEmail';\nimport FgiPass from '../components/layout/FgiPass';\nimport SubmitBtn from '../components/layout/SubmitBtn';\nimport ImageCrop from '../components/layout/ImageCrop';\nimport { alert } from '../redux/alert/alertActions';\nimport { updatePassword, updateEmail, updateProfile } from '../redux/user/userActions';\nimport {\n   selectCurrentUser,\n   selectUserStatus,\n   selectDefaultPhotoURL,\n} from '../redux/user/userSelector';\n\nconst Edit = ({\n   user,\n   alert,\n   userStatus,\n   defaultPhotoURL,\n   updatePassword,\n   updateEmail,\n   updateProfile,\n}) => {\n   const [fullname, setFullname] = useState(user.displayName);\n   const [fullnameStatus, setFullnameStatus] = useState('notEntered');\n   const [photoURL, setPhotoURL] = useState(user.photoURL);\n   const [openImageCropModal, setOpenImageCropModal] = useState(false);\n   const [newPhotoDataUrl, setNewPhotoDataUrl] = useState(null);\n   const [newPhotoFile, setNewPhotoFile] = useState(null);\n\n   const [email, setEmail] = useState(user.email);\n   const [emailStatus, setEmailStatus] = useState('notEntered');\n   const [password, setPassword] = useState('');\n   const [passwordStatus, setPasswordStatus] = useState('notEntered');\n\n   const [currentPassword, setCurrentPassword] = useState('');\n   const [currentPasswordStatus, setCurrentPasswordStatus] = useState('notEntered');\n   const [newPassword, setNewPassword] = useState('');\n   const [newPasswordStatus, setNewPasswordStatus] = useState('notEntered');\n\n   const [submittedBtn, setSubmittedBtn] = useState(null);\n   const [updateProfileBtnStatus, setUpdateProfileBtnStatus] = useState('notSubmitted');\n   const [updateEmailBtnStatus, setUpdateEmailBtnStatus] = useState('notSubmitted');\n   const [updatePasswordBtnStatus, setUpdatePasswordBtnStatus] = useState('notSubmitted');\n\n   useEffect(() => {\n      const Btns = {\n         profile: setUpdateProfileBtnStatus,\n         email: setUpdateEmailBtnStatus,\n         password: setUpdatePasswordBtnStatus,\n      };\n\n      if (!userStatus?.type) return;\n      alert(userStatus.type, userStatus.message);\n\n      Btns[submittedBtn](userStatus.type);\n\n      setTimeout(() => {\n         Btns[submittedBtn]('notSubmitted');\n         setPassword('');\n         setCurrentPassword('');\n         setNewPassword('');\n      }, 1000);\n   }, [userStatus, alert, submittedBtn]);\n\n   const uploadImageInput = useRef(null);\n   const getNewPhotoFromUser = () => {\n      const photo = uploadImageInput.current.files[0];\n      const reader = new FileReader();\n      reader.readAsDataURL(photo);\n      reader.onload = (e) => {\n         setNewPhotoDataUrl(e.target.result);\n         uploadImageInput.current.value = '';\n         setOpenImageCropModal(true);\n      };\n   };\n   const setProfilePicToDefault = () => {\n      setPhotoURL(defaultPhotoURL);\n      setNewPhotoDataUrl(null);\n      setNewPhotoFile(null);\n   };\n   const onCropped = (cropImageUrl) => {\n      setNewPhotoDataUrl(null);\n      setPhotoURL(cropImageUrl.base64);\n      setNewPhotoFile(cropImageUrl.photo);\n   };\n\n   const handlePasswordUpdate = (e) => {\n      e.preventDefault();\n      if (currentPasswordStatus === 'notEntered') {\n         alert('error', 'Please enter your current password.');\n      } else if (currentPasswordStatus === 'EnteredButInvalid') {\n         alert('error', 'Please enter your valid current password.');\n      } else if (newPasswordStatus === 'notEntered') {\n         alert('error', 'Please enter your new password.');\n      } else if (newPasswordStatus === 'EnteredButInvalid') {\n         alert('error', 'Please enter a valid new password.');\n      } else {\n         setUpdatePasswordBtnStatus('submitted');\n         setSubmittedBtn('password');\n         updatePassword(currentPassword, newPassword);\n      }\n   };\n   const handleEmailUpdate = (e) => {\n      e.preventDefault();\n      if (emailStatus === 'notEntered') {\n         alert('error', 'Please enter your email address.');\n      } else if (emailStatus === 'EnteredButInvalid') {\n         alert('error', 'Please enter a valid email address.');\n      } else if (passwordStatus === 'notEntered') {\n         alert('error', 'Please enter your password to change your email');\n      } else if (passwordStatus === 'EnteredButInvalid') {\n         alert('error', 'Please enter your correct current password');\n      } else {\n         setUpdateEmailBtnStatus('submitted');\n         setSubmittedBtn('email');\n         updateEmail(email, password);\n      }\n   };\n   const handleProfileUpdate = (e) => {\n      e.preventDefault();\n      if (fullnameStatus === 'notEntered') {\n         alert('error', 'Please enter your full name.');\n      } else if (emailStatus === 'notEntered') {\n         alert('error', 'Please enter your email address.');\n      } else if (emailStatus === 'EnteredButInvalid') {\n         alert('error', 'Please enter a valid email address.');\n      } else {\n         setUpdateProfileBtnStatus('submitted');\n         setSubmittedBtn('profile');\n         updateProfile({ fullname });\n         if (photoURL === defaultPhotoURL) {\n            updateProfile({ photoURL: defaultPhotoURL });\n         } else if (newPhotoFile) {\n            updateProfile({ newPhotoFile: newPhotoFile });\n         }\n      }\n   };\n\n   return (\n      <>\n         <Navbar page=\"edit\" />\n         <Pipes />\n         <div className=\"section section--edit\">\n            <form\n               className=\"form form--edit\"\n               autoComplete=\"off\"\n               onSubmit={handleProfileUpdate}\n            >\n               <h3 className=\"form__header--midtitle\">Update Your Profile</h3>\n               <div className=\"form__body\">\n                  <FgiName\n                     fullname={fullname}\n                     updateFullname={setFullname}\n                     fullnameStatus={fullnameStatus}\n                     updateFullnameStatus={setFullnameStatus}\n                  />\n                  <ImageCrop\n                     img={newPhotoDataUrl}\n                     openModal={openImageCropModal}\n                     updateModal={setOpenImageCropModal}\n                     onCropped={onCropped}\n                  />\n                  <div className=\"form__group__profile\">\n                     <img\n                        className=\"form__group__profile--preview\"\n                        id=\"uploadImagePreview\"\n                        src={photoURL}\n                        alt=\"profile\"\n                     />\n                     <input\n                        className=\"form__group__profile--input\"\n                        id=\"uploadImageInput\"\n                        type=\"file\"\n                        accept=\"image/*\"\n                        name=\"photo\"\n                        onChange={getNewPhotoFromUser}\n                        ref={uploadImageInput}\n                     />\n                     <div className=\"form__group__profile--links\">\n                        <label\n                           className=\"form__group__profile--remove\"\n                           id=\"removeImageLabel\"\n                           onClick={setProfilePicToDefault}\n                        >\n                           Remove Photo\n                        </label>\n                        <label\n                           className=\"form__group__profile--select\"\n                           id=\"uploadImageLabel\"\n                           htmlFor=\"uploadImageInput\"\n                        >\n                           Select New Photo\n                        </label>\n                     </div>\n                  </div>\n                  <SubmitBtn name=\"Update Profile\" status={updateProfileBtnStatus} />\n               </div>\n            </form>\n         </div>\n         <Pipes />\n         <div className=\"section section--edit\">\n            <form\n               className=\"form form--edit\"\n               autoComplete=\"off\"\n               onSubmit={handleEmailUpdate}\n            >\n               <h3 className=\"form__header--midtitle\">Update Your Email</h3>\n               <div className=\"form__body\">\n                  <FgiEmail\n                     email={email}\n                     updateEmail={setEmail}\n                     emailStatus={emailStatus}\n                     updateEmailStatus={setEmailStatus}\n                  />\n                  <FgiPass\n                     password={password}\n                     updatePassword={setPassword}\n                     passwordStatus={passwordStatus}\n                     updatePasswordStatus={setPasswordStatus}\n                  />\n                  <SubmitBtn name=\"Update Email\" status={updateEmailBtnStatus} />\n               </div>\n            </form>\n         </div>\n         <Pipes />\n         <div className=\"section section--edit\">\n            <form\n               className=\"form form--edit\"\n               autoComplete=\"off\"\n               onSubmit={handlePasswordUpdate}\n            >\n               <h3 className=\"form__header--midtitle\">Change Your Password.</h3>\n               <div className=\"form__body\">\n                  <FgiPass\n                     label=\"currentPassword\"\n                     password={currentPassword}\n                     updatePassword={setCurrentPassword}\n                     passwordStatus={currentPasswordStatus}\n                     updatePasswordStatus={setCurrentPasswordStatus}\n                  />\n                  <FgiPass\n                     label=\"newPassword\"\n                     password={newPassword}\n                     updatePassword={setNewPassword}\n                     passwordStatus={newPasswordStatus}\n                     updatePasswordStatus={setNewPasswordStatus}\n                  />\n                  <SubmitBtn name=\"Change Password\" status={updatePasswordBtnStatus} />\n               </div>\n            </form>\n         </div>\n      </>\n   );\n};\n\nconst mapStateToProps = createStructuredSelector({\n   user: selectCurrentUser,\n   userStatus: selectUserStatus,\n   defaultPhotoURL: selectDefaultPhotoURL,\n});\nconst mapDispatchToProps = (dispatch) => ({\n   alert: (type, msg) => dispatch(alert(type, msg)),\n   updatePassword: (currentPassword, newPassword) =>\n      dispatch(updatePassword({ currentPassword, newPassword })),\n   updateEmail: (email, password) => dispatch(updateEmail({ email, password })),\n   updateProfile: (obj) => dispatch(updateProfile(obj)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Edit);\n","import React from 'react';\r\n\r\nconst WaveSvg = () => (\r\n   <svg\r\n      className=\"form__footer--svg\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 1440 320\"\r\n   >\r\n      <path\r\n         fill=\"#002fff\"\r\n         d=\"M0,96L40,117.3C80,139,160,181,240,165.3C320,149,400,75,480,74.7C560,75,640,149,720,154.7C800,160,880,96,960,101.3C1040,107,1120,181,1200,176C1280,171,1360,85,1400,42.7L1440,0L1440,320L1400,320C1360,320,1280,320,1200,320C1120,320,1040,320,960,320C880,320,800,320,720,320C640,320,560,320,480,320C400,320,320,320,240,320C160,320,80,320,40,320L0,320Z\"\r\n      ></path>\r\n   </svg>\r\n);\r\n\r\nexport default WaveSvg;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst BackLink = ({ route }) => (\r\n   <Link to={route} tabIndex=\"-1\">\r\n      <svg\r\n         className=\"form__header--back\"\r\n         xmlns=\"http://www.w3.org/2000/svg\"\r\n         aria-hidden=\"true\"\r\n         focusable=\"false\"\r\n         role=\"img\"\r\n         width=\"1em\"\r\n         height=\"1em\"\r\n         preserveAspectRatio=\"xMidYMid meet\"\r\n         viewBox=\"0 0 512 512\"\r\n         style={{ transform: 'rotate(360deg)' }}\r\n      >\r\n         <path\r\n            fill=\"#002fff\"\r\n            d=\"M401.4 224h-214l83-79.4c11.9-12.5 11.9-32.7 0-45.2s-31.2-12.5-43.2 0L89 233.4c-6 5.8-9 13.7-9 22.4v.4c0 8.7 3 16.6 9 22.4l138.1 134c12 12.5 31.3 12.5 43.2 0 11.9-12.5 11.9-32.7 0-45.2l-83-79.4h214c16.9 0 30.6-14.3 30.6-32 .1-18-13.6-32-30.5-32z\"\r\n         ></path>\r\n      </svg>\r\n   </Link>\r\n);\r\n\r\nexport default BackLink;\r\n","import React, { useEffect, useState } from 'react';\nimport { useLocation, Link } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\n\nimport WaveSvg from '../components/layout/WaveSvg';\nimport BackLink from '../components/utils/BackLink';\nimport FgiName from '../components/layout/FgiName';\nimport FgiEmail from '../components/layout/FgiEmail';\nimport FgiPass from '../components/layout/FgiPass';\nimport SubmitBtn from '../components/layout/SubmitBtn';\n\nimport { alert } from '../redux/alert/alertActions';\nimport { signUp, signIn } from '../redux/user/userActions';\nimport { selectUserStatus } from '../redux/user/userSelector';\n\nconst Login = ({ alert, register, login, userStatus }) => {\n   const path = useLocation().pathname;\n   const [fullname, setFullname] = useState('');\n   const [fullnameStatus, setFullnameStatus] = useState('notEntered');\n   const [email, setEmail] = useState('');\n   const [emailStatus, setEmailStatus] = useState('notEntered');\n   const [password, setPassword] = useState('');\n   const [passwordStatus, setPasswordStatus] = useState('notEntered');\n   const [submitBtnStatus, setSubmitBtnStatus] = useState('notSubmitted');\n\n   let title, forgetPassword, footer, submitBtn;\n   if (path === '/login') {\n      title = <h3 className=\"form__header--title\">Login</h3>;\n      forgetPassword = (\n         <Link to=\"/forgetPassword\" className=\"form__body--forget-password\">\n            Forget your password?\n         </Link>\n      );\n      footer = (\n         <div className=\"form__footer\">\n            <span>I&#39;m a new user, </span>\n            <Link to=\"/signup\" className=\"form__footer--link\">\n               Sign Up\n            </Link>\n         </div>\n      );\n      submitBtn = <SubmitBtn name=\"Login\" status={submitBtnStatus} />;\n   } else {\n      title = <h3 className=\"form__header--title\">Sign Up</h3>;\n      forgetPassword = null;\n      footer = (\n         <div className=\"form__footer\">\n            <span>I&#39;m already a member, </span>\n            <Link to=\"/login\" className=\"form__footer--link\">\n               Login\n            </Link>\n         </div>\n      );\n      submitBtn = <SubmitBtn name=\"Create Account\" status={submitBtnStatus} />;\n   }\n\n   useEffect(() => {\n      if (!userStatus?.type) return;\n\n      alert(userStatus.type, userStatus.message);\n      setSubmitBtnStatus(userStatus.type);\n      if (userStatus.type === 'error') {\n         setTimeout(() => {\n            setSubmitBtnStatus('notSubmitted');\n         }, 1000);\n      }\n   }, [userStatus, alert]);\n\n   const handleSubmit = (e) => {\n      e.preventDefault();\n      if (path === '/signup') {\n         if (fullnameStatus === 'notEntered') {\n            alert('error', 'Please enter your full name.');\n            return;\n         }\n      }\n      if (emailStatus === 'notEntered') {\n         alert('error', 'Please enter your email address.');\n      } else if (emailStatus === 'EnteredButInvalid') {\n         alert('error', 'Please enter a valid email address.');\n      } else if (passwordStatus === 'notEntered') {\n         alert('error', 'Please enter your password.');\n      } else if (passwordStatus === 'EnteredButInvalid') {\n         alert('error', 'Password should be at least 8 characters long.');\n      } else {\n         setSubmitBtnStatus('submitted');\n         if (path === '/signup') {\n            register(fullname, email, password);\n         } else {\n            login(email, password);\n         }\n      }\n   };\n\n   return (\n      <form className=\"form\" autoComplete=\"off\" onSubmit={handleSubmit}>\n         <div className=\"form__header\">\n            <BackLink route=\"/\" />\n            {title}\n         </div>\n         <div className=\"form__body\">\n            <FgiName\n               path={path}\n               fullname={fullname}\n               updateFullname={setFullname}\n               fullnameStatus={fullnameStatus}\n               updateFullnameStatus={setFullnameStatus}\n            />\n            <FgiEmail\n               email={email}\n               updateEmail={setEmail}\n               emailStatus={emailStatus}\n               updateEmailStatus={setEmailStatus}\n            />\n            <FgiPass\n               password={password}\n               updatePassword={setPassword}\n               passwordStatus={passwordStatus}\n               updatePasswordStatus={setPasswordStatus}\n            />\n            {submitBtn}\n            {forgetPassword}\n         </div>\n         {footer}\n         <WaveSvg></WaveSvg>\n      </form>\n   );\n};\n\nconst mapStateToProps = createStructuredSelector({\n   userStatus: selectUserStatus,\n});\nconst mapDispatchToProps = (dispatch) => ({\n   alert: (type, msg) => dispatch(alert(type, msg)),\n   register: (fullName, email, password) =>\n      dispatch(signUp({ email, password, fullName })),\n   login: (email, password) => dispatch(signIn({ email, password })),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React, { useState, useEffect } from 'react';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport SubmitBtn from '../components/layout/SubmitBtn';\nimport BackLink from '../components/utils/BackLink';\nimport FgiEmail from '../components/layout/FgiEmail';\n\nimport { alert } from '../redux/alert/alertActions';\nimport { forgetPassword } from '../redux/user/userActions';\nimport { selectUserStatus } from '../redux/user/userSelector';\n\nconst ForgetPassword = ({ alert, forgetPassword, userStatus }) => {\n   const history = useHistory();\n   const [email, setEmail] = useState('');\n   const [emailStatus, setEmailStatus] = useState('notEntered');\n   const [submitBtnStatus, setSubmitBtnStatus] = useState('notSubmitted');\n\n   useEffect(() => {\n      if (!userStatus?.type || !userStatus?.message) return;\n\n      alert(userStatus.type, userStatus.message);\n      setSubmitBtnStatus(userStatus.type);\n      if (userStatus.type === 'error') {\n         setTimeout(() => {\n            setSubmitBtnStatus('notSubmitted');\n         }, 1000);\n      }\n      if (userStatus.type === 'success') {\n         setTimeout(() => {\n            history.push('/login');\n         }, 1200);\n      }\n   }, [userStatus, alert, history]);\n\n   const handleSubmit = (e) => {\n      e.preventDefault();\n      if (emailStatus === 'notEntered') {\n         alert('error', 'Please enter your email address.');\n      } else if (emailStatus === 'EnteredButInvalid') {\n         alert('error', 'Please enter a valid email address.');\n      } else {\n         setSubmitBtnStatus('submitted');\n         forgetPassword(email);\n      }\n   };\n\n   return (\n      <form className=\"form form--fit\" autoComplete=\"off\" onSubmit={handleSubmit}>\n         <div className=\"form__header\">\n            <BackLink route=\"/login\" />\n            <h3 className=\"form__header--title\">Forget Password?</h3>\n            <h5 className=\"form__header--subtitle\">\n               Enter your email address to reset your password.\n            </h5>\n         </div>\n         <div className=\"form__body\">\n            <FgiEmail\n               email={email}\n               updateEmail={setEmail}\n               emailStatus={emailStatus}\n               updateEmailStatus={setEmailStatus}\n            />\n            <SubmitBtn name=\"Send Reset Link\" status={submitBtnStatus} />\n         </div>\n      </form>\n   );\n};\n\nconst mapStateToProps = createStructuredSelector({\n   userStatus: selectUserStatus,\n});\nconst mapDispatchToProps = (dispatch) => ({\n   alert: (type, msg) => dispatch(alert(type, msg)),\n   forgetPassword: (email) => dispatch(forgetPassword(email)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ForgetPassword);\n","const firebaseConfig = {\n   apiKey: 'AIzaSyBnv8pvyLFPizxhL7GZhZjY1CV4go-Wbfg',\n   authDomain: 'login-module-vue.firebaseapp.com',\n   projectId: 'login-module-vue',\n   storageBucket: 'login-module-vue.appspot.com',\n   messagingSenderId: '338708981633',\n   appId: '1:338708981633:web:e4fcc748367361607cea80',\n};\n\nexport default firebaseConfig;\n","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/storage';\r\nimport firebaseConfig from './firebaseConfig';\r\n\r\n///Initialize Firebase///\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n///Utils///\r\nconst fb = firebase;\r\nconst auth = firebase.auth();\r\nconst storageRef = firebase.storage().ref();\r\n\r\nexport const resolveUser = () => {\r\n   return new Promise((resolve, reject) => {\r\n      const unsubscribe = auth.onAuthStateChanged((user) => {\r\n         unsubscribe();\r\n         resolve(user);\r\n      }, reject);\r\n   });\r\n};\r\n\r\nexport const getCurrentUser = () => {\r\n   return auth.currentUser;\r\n};\r\n\r\n// auth.signOut();\r\n\r\nexport { fb, auth, storageRef };\r\n","import React, { useEffect, useState } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\n\nimport SubmitBtn from '../components/layout/SubmitBtn';\nimport FgiPass from '../components/layout/FgiPass';\nimport { confirmPasswordReset } from '../redux/user/userActions';\nimport { selectUserStatus } from '../redux/user/userSelector';\nimport { auth } from '../firebase/firebaseUtils';\nimport { alert } from '../redux/alert/alertActions';\n\nfunction useQuery() {\n   return new URLSearchParams(useLocation().search);\n}\n\nconst AccountManagement = ({ alert, confirmPasswordReset, userStatus }) => {\n   const history = useHistory();\n   const query = useQuery();\n   const mode = query.get('mode');\n   const actionCode = query.get('oobCode');\n   const apiKey = query.get('apiKey');\n\n   const [isInvalidCode, setIsInvalidCode] = useState(false);\n   const [showForm, setShowForm] = useState(false);\n   const [accountEmail, setAccountEmail] = useState('');\n   const [newPassword, setNewPassword] = useState('');\n   const [newPasswordStatus, setNewPasswordStatus] = useState('notEntered');\n   const [submitBtnStatus, setSubmitBtnStatus] = useState('notSubmitted');\n\n   useEffect(() => {\n      async function verifyPasswordResetCode() {\n         try {\n            const email = await auth.verifyPasswordResetCode(actionCode);\n            console.log(email);\n            setAccountEmail(email);\n            setShowForm(true);\n         } catch (error) {\n            setIsInvalidCode(true);\n         }\n      }\n      verifyPasswordResetCode();\n   }, [actionCode]);\n\n   useEffect(() => {\n      if (!userStatus?.type) return;\n\n      alert(userStatus.type, userStatus.message);\n      setSubmitBtnStatus(userStatus.type);\n      if (userStatus.type === 'error') {\n         setTimeout(() => {\n            setSubmitBtnStatus('notSubmitted');\n         }, 1000);\n      }\n\n      if (userStatus.type === 'success') {\n         setTimeout(() => {\n            history.push('/login');\n         }, 1200);\n      }\n   }, [userStatus, alert, history]);\n\n   const handleSubmit = (e) => {\n      e.preventDefault();\n      if (newPasswordStatus === 'notEntered') {\n         alert('error', 'Please enter your new password.');\n      } else if (newPasswordStatus === 'EnteredButInvalid') {\n         alert('error', 'Please enter a valid new password.');\n      } else {\n         setSubmitBtnStatus('submitted');\n         confirmPasswordReset(actionCode, newPassword);\n      }\n   };\n\n   return (\n      <>\n         {isInvalidCode ? (\n            <form\n               className=\"form form--fit\"\n               autoComplete=\"off\"\n               onSubmit={() => history.push('/forgetPassword')}\n            >\n               <div className=\"form__header\">\n                  <h3 className=\"form__header--title\">Reset Password</h3>\n                  <h5 className=\"form__header--subtitle\">\n                     Password reset code is invalid or expired! Try resetting your\n                     password again.\n                  </h5>\n                  <div className=\"form__body\">\n                     <SubmitBtn name=\"Reset Password Again\" status={submitBtnStatus} />\n                  </div>\n               </div>\n            </form>\n         ) : null}\n         {!isInvalidCode && showForm ? (\n            <form className=\"form form--fit\" autoComplete=\"off\" onSubmit={handleSubmit}>\n               <div className=\"form__header\">\n                  <h3 className=\"form__header--title form__header--title--reset\">\n                     Reset Password\n                  </h3>\n                  <h5 className=\"form__header--subtitle\">{accountEmail}</h5>\n               </div>\n               <div className=\"form__body\">\n                  <FgiPass\n                     label=\"newPassword\"\n                     password={newPassword}\n                     updatePassword={setNewPassword}\n                     passwordStatus={newPasswordStatus}\n                     updatePasswordStatus={setNewPasswordStatus}\n                  />\n                  <SubmitBtn name=\"Reset Password\" status={submitBtnStatus} />\n               </div>\n            </form>\n         ) : null}\n      </>\n   );\n};\n\nconst mapStateToProps = createStructuredSelector({\n   userStatus: selectUserStatus,\n});\nconst mapDispatchToProps = (dispatch) => ({\n   alert: (type, msg) => dispatch(alert(type, msg)),\n   confirmPasswordReset: (actionCode, newPassword) =>\n      dispatch(confirmPasswordReset({ actionCode, newPassword })),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(AccountManagement);\n","import React from 'react';\r\n\r\nconst PageNotFound = () => (\r\n   <div className=\"section\">\r\n      <h1 className=\"pnf\">\r\n         Opps! <span className=\"pnf--errcode\">404</span>\r\n      </h1>\r\n      <h1 className=\"pnf\">The page you are looking for could not be found!</h1>\r\n   </div>\r\n);\r\n\r\nexport default PageNotFound;\r\n","import React, { Suspense, lazy, useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport AlertBox from './components/utils/AlertBox';\nimport Spinner from './components/utils/Spinner';\nimport ProtectedRoute from './components/utils/ProtectedRoute';\nimport PublicRoute from './components/utils/PublicRoute';\nimport { checkUserLoggedIn } from './redux/user/userActions';\n\nimport Home from './pages/Home';\nimport Edit from './pages/Edit';\nimport LoginSignup from './pages/LoginSignup';\nimport ForgetPassword from './pages/ForgetPassword';\nimport AccountManagement from './pages/AccountManagement';\nimport PageNotFound from './pages/PageNotFound';\n\nfunction App({ checkUserLoggedIn }) {\n   useEffect(() => {\n      checkUserLoggedIn();\n   }, [checkUserLoggedIn]);\n\n   return (\n      <>\n         <AlertBox></AlertBox>\n         <Suspense fallback={<Spinner />}>\n            <Switch>\n               <Route exact path=\"/\" component={Home} />\n               <ProtectedRoute path=\"/edit\">\n                  <Edit />\n               </ProtectedRoute>\n               <PublicRoute path=\"/login\">\n                  <LoginSignup />\n               </PublicRoute>\n               <PublicRoute path=\"/signup\">\n                  <LoginSignup />\n               </PublicRoute>\n               <PublicRoute path=\"/forgetPassword\">\n                  <ForgetPassword />\n               </PublicRoute>\n               <PublicRoute path=\"/accmng\">\n                  <AccountManagement />\n               </PublicRoute>\n               <Route exact path=\"/*\" component={PageNotFound} />\n            </Switch>\n         </Suspense>\n      </>\n   );\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n   checkUserLoggedIn: () => dispatch(checkUserLoggedIn()),\n});\nexport default connect(null, mapDispatchToProps)(App);\n","import alertActionTypes from './alertActionTypes';\n\nconst INITIAL_STATE = {\n   showAlert: false,\n   type: null,\n   msg: null,\n};\n\nconst alertReducer = (state = INITIAL_STATE, action) => {\n   switch (action.type) {\n      case alertActionTypes.SHOW_ALERT:\n         return {\n            ...state,\n            showAlert: true,\n            type: action.payload.type,\n            msg: action.payload.msg,\n         };\n      case alertActionTypes.HIDE_ALERT:\n         return {\n            ...state,\n            showAlert: false,\n         };\n      default:\n         return state;\n   }\n};\n\nexport default alertReducer;\n","import userActionTypes from './userActionTypes';\n\nconst INITIAL_STATE = {\n   defaultPhotoURL:\n      'https://firebasestorage.googleapis.com/v0/b/login-module-vue.appspot.com/o/default.png?alt=media&token=ac9c3618-ab29-42b5-8fc4-54d31cbe68a2',\n   currentUser: 'checking',\n   status: null,\n};\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n   switch (action.type) {\n      case userActionTypes.STORE_USER:\n         return {\n            ...state,\n            currentUser: action.payload,\n         };\n      case userActionTypes.SET_STATUS:\n         return {\n            ...state,\n            status: action.payload,\n         };\n      default:\n         return state;\n   }\n};\n\nexport default userReducer;\n","import { combineReducers } from 'redux';\n\nimport alertReducer from './alert/alertReducer';\nimport userReducer from './user/userReducer';\n\nconst rootReducer = combineReducers({\n   user: userReducer,\n   alert: alertReducer,\n});\n\nexport default rootReducer;\n","import { takeLatest, put, all, call } from 'redux-saga/effects';\n\nimport alertActionTypes from './alertActionTypes';\nimport { showAlert, hideAlert } from './alertActions';\n\nasync function hold(time) {\n   time = time ?? 1000;\n   return new Promise((res) => {\n      setTimeout(() => {\n         res(true);\n      }, time);\n   });\n}\nexport function* alert({ payload: { type, msg, time } }) {\n   yield put(showAlert(type, msg));\n   yield hold(time);\n   yield put(hideAlert());\n}\nexport function* onAlert() {\n   yield takeLatest(alertActionTypes.ALERT, alert);\n}\n\nexport default function* alertSagas() {\n   yield all([call(onAlert)]);\n}\n","const hold = (ms = 1000) => {\n   return new Promise((res) => {\n      setTimeout(() => {\n         res(true);\n      }, ms);\n   });\n};\n\nexport default hold;\n","import { takeLatest, put, all, call } from 'redux-saga/effects';\n\nimport hold from '../../components/vanilla/hold';\nimport userActionTypes from './userActionTypes';\nimport { storeUser, setStatus } from './userActions';\nimport {\n   fb,\n   auth,\n   storageRef,\n   resolveUser,\n   getCurrentUser,\n} from '../../firebase/firebaseUtils';\n\nfunction* isUserLoggedIn() {\n   try {\n      const user = yield resolveUser();\n      if (!user) {\n         yield put(storeUser(null));\n      } else {\n         yield put(storeUser(user));\n      }\n   } catch (error) {\n      yield put(setStatus('error', error.message));\n   }\n}\nexport function* onCheckUserLoggedIn() {\n   yield takeLatest(userActionTypes.CHECK_USER_LOGGED_IN, isUserLoggedIn);\n}\n\nfunction* signup({ payload: { email, password, fullName } }) {\n   try {\n      const { user } = yield auth.createUserWithEmailAndPassword(email, password);\n      yield user.updateProfile({\n         displayName: fullName,\n         photoURL:\n            'https://firebasestorage.googleapis.com/v0/b/login-module-vue.appspot.com/o/default.png?alt=media&token=ac9c3618-ab29-42b5-8fc4-54d31cbe68a2',\n      });\n      const currentUser = getCurrentUser();\n      if (currentUser) {\n         yield put(setStatus('success', 'User Created Successfully!'));\n         yield hold(1200);\n         yield put(setStatus(null));\n         yield put(storeUser(currentUser));\n      } else {\n         throw new Error('Unable to store user!');\n      }\n   } catch (error) {\n      yield put(storeUser(null));\n      if (error.code === 'auth/email-already-in-use') {\n         yield put(setStatus('error', 'Email already exists!'));\n      } else {\n         yield put(setStatus('error', error.message));\n      }\n   }\n}\nexport function* onSignup() {\n   yield takeLatest(userActionTypes.SIGN_UP, signup);\n}\n\nfunction* signin({ payload: { email, password } }) {\n   try {\n      yield auth.signInWithEmailAndPassword(email, password);\n      const currentUser = getCurrentUser();\n      if (currentUser) {\n         yield put(setStatus('success', 'User Logged In Successfully!'));\n         yield hold(1200);\n         yield put(setStatus(null));\n         yield put(storeUser(currentUser));\n      } else {\n         throw new Error('Unable to store user!');\n      }\n   } catch (error) {\n      yield put(storeUser(null));\n      if (error.code === 'auth/wrong-password' || error.code === 'auth/user-not-found') {\n         yield put(setStatus('error', 'Invalid email or password!'));\n      } else {\n         yield put(setStatus('error', error.message));\n      }\n   }\n}\nexport function* onSignin() {\n   yield takeLatest(userActionTypes.SIGN_IN, signin);\n}\n\nfunction* signout() {\n   try {\n      yield auth.signOut();\n      yield put(storeUser(null));\n   } catch (error) {\n      yield put(storeUser(null));\n      yield put(setStatus('error', error.message));\n   }\n}\nexport function* onSignout() {\n   yield takeLatest(userActionTypes.SIGN_OUT, signout);\n}\n\nfunction* forgetPassword({ payload: { email } }) {\n   try {\n      yield auth.sendPasswordResetEmail(email);\n      yield put(setStatus('success', 'Link sent to email successfully!'));\n      yield put(setStatus(null));\n   } catch (error) {\n      yield put(setStatus('error', error.message));\n   }\n}\nexport function* onForgetPassword() {\n   yield takeLatest(userActionTypes.FORGET_PASSWORD, forgetPassword);\n}\n\nfunction* _reAuthenticateUser(password) {\n   try {\n      const user = getCurrentUser();\n      const credentials = fb.auth.EmailAuthProvider.credential(user.email, password);\n      yield user.reauthenticateWithCredential(credentials);\n      return 'success';\n   } catch (error) {\n      return error.code;\n   }\n}\nfunction* updatePassword({ payload: { currentPassword, newPassword } }) {\n   const res = yield _reAuthenticateUser(currentPassword);\n   if (res === 'success') {\n      try {\n         const user = getCurrentUser();\n         yield user.updatePassword(newPassword);\n         yield put(storeUser(getCurrentUser()));\n         yield put(setStatus('success', 'Password Updated Successfully!'));\n         yield put(setStatus(null));\n      } catch (error) {\n         yield put(setStatus('error', error.message));\n      }\n   } else {\n      if (res === 'auth/wrong-password') {\n         yield put(setStatus('error', 'Invalid Current Password!'));\n         yield put(setStatus(null));\n      } else if (res === 'auth/too-many-requests') {\n         yield put(setStatus('error', 'Please try after some time!'));\n         yield put(setStatus(null));\n      } else {\n         yield put(setStatus('error', 'something went wrong!'));\n         yield put(setStatus(null));\n      }\n   }\n}\nexport function* onUpdatePassword() {\n   yield takeLatest(userActionTypes.UPDATE_PASSWORD, updatePassword);\n}\nfunction* updateEmail({ payload: { email, password } }) {\n   const res = yield _reAuthenticateUser(password);\n   if (res === 'success') {\n      try {\n         const user = getCurrentUser();\n         yield user.updateEmail(email);\n         yield put(storeUser(getCurrentUser()));\n         yield put(setStatus('success', 'Email Updated Successfully!'));\n         yield put(setStatus(null));\n      } catch (error) {\n         yield put(setStatus('error', error.message));\n      }\n   } else {\n      if (res === 'auth/wrong-password') {\n         yield put(setStatus('error', 'Invalid Current Password!'));\n         yield put(setStatus(null));\n      } else if (res === 'auth/too-many-requests') {\n         yield put(setStatus('error', 'Please try after some time!'));\n         yield put(setStatus(null));\n      } else {\n         yield put(setStatus('error', 'something went wrong!'));\n         yield put(setStatus(null));\n      }\n   }\n}\nexport function* onUpdateEmail() {\n   yield takeLatest(userActionTypes.UPDATE_EMAIL, updateEmail);\n}\n\nfunction* confirmPasswordReset({ payload: { actionCode, newPassword } }) {\n   try {\n      yield auth.confirmPasswordReset(actionCode, newPassword);\n      yield put(setStatus('success', 'Password Reseted Successfully!'));\n      yield put(setStatus(null));\n   } catch (error) {\n      yield put(setStatus('error', 'something went wrong!'));\n      yield put(setStatus(null));\n   }\n}\nexport function* onConfirmPasswordReset() {\n   yield takeLatest(userActionTypes.CONFIRM_PASSWORD_RESET, confirmPasswordReset);\n}\n\nfunction* updateProfile({ payload }) {\n   try {\n      const user = getCurrentUser();\n      if (payload.fullname) {\n         yield user.updateProfile({\n            displayName: payload.fullname,\n         });\n      }\n      if (payload.photoURL) {\n         yield user.updateProfile({\n            photoURL: payload.photoURL,\n         });\n      } else if (payload.newPhotoFile) {\n         const newPhoto = payload.newPhotoFile;\n         const ext = newPhoto.name.split('.').pop();\n         const name = `${user.uid}-photo.${ext}`;\n         const snapshot = yield storageRef.child(name).put(newPhoto, {\n            contentType: 'image/jpeg',\n         });\n         const photoURL = yield snapshot.ref.getDownloadURL();\n         yield user.updateProfile({\n            photoURL,\n         });\n      }\n      yield put(storeUser(getCurrentUser()));\n      yield put(setStatus('success', 'Profile Updated Successfully!'));\n      yield put(setStatus(null));\n   } catch (error) {\n      yield put(setStatus('error', error.message));\n      yield put(setStatus(null));\n   }\n}\nexport function* onUpdateProfile() {\n   yield takeLatest(userActionTypes.UPDATE_PROFILE, updateProfile);\n}\n\nexport default function* userSagas() {\n   yield all([\n      call(onCheckUserLoggedIn),\n      call(onSignup),\n      call(onSignin),\n      call(onSignout),\n      call(onForgetPassword),\n      call(onUpdatePassword),\n      call(onUpdateEmail),\n      call(onConfirmPasswordReset),\n      call(onUpdateProfile),\n   ]);\n}\n","import { all, call } from 'redux-saga/effects';\n\nimport alertSagas from './alert/alertSagas';\nimport userSagas from './user/userSagas';\n\nfunction* rootSaga() {\n   yield all([call(alertSagas), call(userSagas)]);\n}\n\nexport default rootSaga;\n","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { createLogger } from 'redux-logger';\n\nimport rootReducer from './rootReducer';\nimport rootSaga from './rootSaga';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\nif (process.env.NODE_ENV === `development`) {\n   const logger = createLogger({\n      collapsed: true,\n      diff: true,\n   });\n   middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\n\nsagaMiddleware.run(rootSaga);\n","const preloader = () => {\n   const loader = document.getElementById('pre-loader');\n   window.addEventListener('load', () => {\n      setTimeout(() => {\n         loader.remove();\n      }, 400);\n   });\n};\n\nexport default preloader;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './sass/main.scss';\nimport App from './App';\nimport { store } from './redux/store';\nimport preloader from './components/vanilla/preloader';\n\npreloader();\n\nReactDOM.render(\n   <Provider store={store}>\n      <BrowserRouter>\n         <React.StrictMode>\n            <App />\n         </React.StrictMode>\n      </BrowserRouter>\n   </Provider>,\n   document.getElementById('root'),\n);\n"],"sourceRoot":""}